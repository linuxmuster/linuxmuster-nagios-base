#!/bin/sh

. /usr/share/linuxmuster/config/dist.conf || exit 1
. $HELPERFUNCTIONS || exit 1

case $fwconfig in
 ipcop|ipfire) ;;
 *) echo "Nothing to do for custom firewall."
    exit 0 ;;
esac

SSH_COMMAND="ssh -p 222 $ipcopip"
SCP_COMMAND="scp -P 222"
LIB_DIR=/root/
FIREWALL_FILES_ARCHIVE=linuxmuster-nagios-firewall-files.tgz
FIREWALL_CONFIG_FILE=firewall_nagios.conf
FIREWALL_INIT_SCRIPT=/usr/local/nagios/scripts/linuxmuster-init
NAGIOS_LOCAL_HOME=/etc/nagios3/
NAGIOSCONFIG=/etc/linuxmuster/nagios.conf

#delete default stuff on firewall
$SSH_COMMAND rm -rf /usr/local/nagios/scripts
$SSH_COMMAND rm -rf /usr/local/nagios/plugins
$SSH_COMMAND rm -rf /usr/local/nagios/.ssh

# copy archive to firewall
$SCP_COMMAND $LIB_DIR/$FIREWALL_FILES_ARCHIVE $ipcopip:/

# extract files on firewall
$SSH_COMMAND tar -C / -xzf /$FIREWALL_FILES_ARCHIVE 

# delete archive file
$SSH_COMMAND rm /$FIREWALL_FILES_ARCHIVE

# initialize settings on firewall
$SSH_COMMAND $FIREWALL_INIT_SCRIPT

# ssh setup
if [ -f $NAGIOS_LOCAL_HOME/.ssh/id_dsa ]; then
  echo "Key exists, copying key to firewall"
  $SCP_COMMAND $NAGIOS_LOCAL_HOME/.ssh/id_dsa.pub $ipcopip:/usr/local/nagios/.ssh/authorized_keys
else
  echo "No SSH-Key for nagios found, creating one..."
  mkdir -p $NAGIOS_LOCAL_HOME/.ssh
  cd $NAGIOS_LOCAL_HOME/.ssh
  ssh-keygen -b 1024 -f id_dsa -t dsa -N '' 
fi

# check updated nagios.conf 
UPDATED=""
UPDATED=`grep FIREWALLSQUIDGUARDPROC $NAGIOSCONFIG`
if [ -z "$UPDATED" ]; then 
   echo "Modifying nagios configuration file..."
   cat $LIB_DIR/$FIREWALL_CONFIG_FILE >> $NAGIOSCONFIG
fi
